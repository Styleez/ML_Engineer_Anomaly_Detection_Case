"""initial_auto_migration

Revision ID: d7804a52fcd4
Revises: 
Create Date: 2025-09-17 23:05:26.900341

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd7804a52fcd4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('prediction_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('series_id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('prediction', sa.Boolean(), nullable=False),
    sa.Column('model_version', sa.String(), nullable=False),
    sa.Column('inference_latency_ms', sa.Float(), nullable=True),
    sa.Column('database_latency_ms', sa.Float(), nullable=True),
    sa.Column('total_latency_ms', sa.Float(), nullable=True),
    sa.Column('created_at', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prediction_logs_id'), 'prediction_logs', ['id'], unique=False)
    op.create_index(op.f('ix_prediction_logs_series_id'), 'prediction_logs', ['series_id'], unique=False)
    op.create_table('trained_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('series_id', sa.String(), nullable=False),
    sa.Column('model_type', sa.String(), nullable=False),
    sa.Column('mean', sa.Float(), nullable=False),
    sa.Column('std', sa.Float(), nullable=False),
    sa.Column('threshold', sa.Float(), nullable=False),
    sa.Column('model_version', sa.String(), nullable=True),
    sa.Column('training_points', sa.Integer(), nullable=False),
    sa.Column('training_data_stats', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('training_latency_ms', sa.Float(), nullable=True),
    sa.Column('created_at', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('series_id', 'model_version', name='uq_series_version')
    )
    op.create_index(op.f('ix_trained_models_id'), 'trained_models', ['id'], unique=False)
    op.create_index(op.f('ix_trained_models_series_id'), 'trained_models', ['series_id'], unique=False)
    op.create_table('training_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('series_id', sa.String(), nullable=False),
    sa.Column('model_version', sa.String(), nullable=False),
    sa.Column('timestamps', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('values', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('data_points_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_data_id'), 'training_data', ['id'], unique=False)
    op.create_index(op.f('ix_training_data_series_id'), 'training_data', ['series_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_training_data_series_id'), table_name='training_data')
    op.drop_index(op.f('ix_training_data_id'), table_name='training_data')
    op.drop_table('training_data')
    op.drop_index(op.f('ix_trained_models_series_id'), table_name='trained_models')
    op.drop_index(op.f('ix_trained_models_id'), table_name='trained_models')
    op.drop_table('trained_models')
    op.drop_index(op.f('ix_prediction_logs_series_id'), table_name='prediction_logs')
    op.drop_index(op.f('ix_prediction_logs_id'), table_name='prediction_logs')
    op.drop_table('prediction_logs')
    # ### end Alembic commands ###
