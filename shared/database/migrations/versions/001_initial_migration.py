"""Initial migration

Revision ID: 001
Revises: 
Create Date: 2025-09-17 12:40:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('trained_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('series_id', sa.String(255), nullable=False),
    sa.Column('model_type', sa.String(100), nullable=False),
    sa.Column('mean', sa.Float(), nullable=False),
    sa.Column('std', sa.Float(), nullable=False),
    sa.Column('threshold', sa.Float(), nullable=False),
    sa.Column('model_version', sa.String(100), nullable=False),
    sa.Column('training_points', sa.Integer(), nullable=False),
    sa.Column('training_data_stats', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False, default=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trained_models_series_id'), 'trained_models', ['series_id'], unique=False)
    op.create_index(op.f('ix_trained_models_is_active'), 'trained_models', ['is_active'], unique=False)
    
    op.create_table('training_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('series_id', sa.String(255), nullable=False),
    sa.Column('model_version', sa.String(100), nullable=False),
    sa.Column('timestamps', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('values', postgresql.ARRAY(sa.Float()), nullable=False),
    sa.Column('data_points_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_data_series_id'), 'training_data', ['series_id'], unique=False)
    
    op.create_table('prediction_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('series_id', sa.String(255), nullable=False),
    sa.Column('model_version', sa.String(100), nullable=False),
    sa.Column('input_timestamps', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('input_values', postgresql.ARRAY(sa.Float()), nullable=False),
    sa.Column('predictions', postgresql.ARRAY(sa.Boolean()), nullable=False),
    sa.Column('prediction_scores', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('predicted_at', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prediction_logs_series_id'), 'prediction_logs', ['series_id'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_prediction_logs_series_id'), table_name='prediction_logs')
    op.drop_table('prediction_logs')
    op.drop_index(op.f('ix_training_data_series_id'), table_name='training_data')
    op.drop_table('training_data')
    op.drop_index(op.f('ix_trained_models_is_active'), table_name='trained_models')
    op.drop_index(op.f('ix_trained_models_series_id'), table_name='trained_models')
    op.drop_table('trained_models')
    # ### end Alembic commands ###
