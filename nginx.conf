events {
    worker_connections 1024;
}

http {
    upstream inference_backend {
        least_conn;
        server inference-1:8000;
        server inference-2:8000;
    }

    upstream training_backend {
        server training:8000;
    }

    # Rate limiting for training (expensive operations)
    limit_req_zone $binary_remote_addr zone=training:10m rate=5r/s;
    
    # Basic rate limiting for inference
    limit_req_zone $binary_remote_addr zone=inference:10m rate=200r/s;

    server {
        listen 80;
        
        # Health checks
        location /health {
            access_log off;
            proxy_pass http://inference_backend/healthcheck;
            proxy_set_header Host $host;
        }

        # Inference endpoints (high volume, low latency)
        location /predict {
            limit_req zone=inference burst=20 nodelay;
            
            proxy_pass http://inference_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Optimizations for low latency
            proxy_buffering off;
            proxy_cache off;
            proxy_connect_timeout 1s;
            proxy_send_timeout 1s;
            proxy_read_timeout 1s;
        }

        # Training endpoints (low volume, can be slower)
        location /fit {
            limit_req zone=training burst=5 nodelay;
            
            proxy_pass http://training_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Longer timeouts for training
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Metrics (Prometheus)
        location /metrics {
            proxy_pass http://inference_backend;
            proxy_set_header Host $host;
        }

        # Info/docs
        location / {
            proxy_pass http://inference_backend;
            proxy_set_header Host $host;
        }
    }
}
