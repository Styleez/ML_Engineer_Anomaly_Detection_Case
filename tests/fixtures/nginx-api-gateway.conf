events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging format similar to API Gateway
    log_format api_gateway '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" rt=$request_time '
                          'upstream_addr=$upstream_addr '
                          'upstream_response_time=$upstream_response_time';

    access_log /var/log/nginx/api_gateway.log api_gateway;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting (simulating API Gateway quotas)
    limit_req_zone $binary_remote_addr zone=training:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=inference:10m rate=200r/s;
    limit_req_zone $binary_remote_addr zone=monitoring:10m rate=20r/s;

    # Upstreams (3 microservices)
    upstream training_backend {
        server training-service:8000;
        keepalive 32;
    }

    upstream inference_backend {
        # LEAST_LATENCY load balancing for performance
        least_conn;
        server inference-service:8000;
        keepalive 32;
    }

    upstream monitoring_backend {
        server monitoring-service:8000;
        keepalive 32;
    }

    # API Gateway Simulator
    server {
        listen 80;
        server_name localhost api-gateway-test;

        # Security headers (simulating API Gateway)
        add_header X-API-Gateway "Local-Simulator" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;

        # CORS headers (simulating API Gateway CORS)
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, x-api-key" always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # =====================================
        # TRAINING ENDPOINTS
        # =====================================
        location /fit {
            limit_req zone=training burst=5 nodelay;
            
            proxy_pass http://training_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Training timeouts (simulating API Gateway)
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Increase body size for training data
            client_max_body_size 10M;
            
            # Add response headers
            add_header X-Service "training" always;
            add_header X-Backend-IP $upstream_addr always;
        }

        # =====================================
        # INFERENCE ENDPOINTS (High Performance)
        # =====================================
        location /predict {
            limit_req zone=inference burst=50 nodelay;
            
            proxy_pass http://inference_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Optimizations for low latency (simulating API Gateway)
            proxy_buffering off;
            proxy_cache off;
            proxy_connect_timeout 1s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            
            # Add response headers
            add_header X-Service "inference" always;
            add_header X-Backend-IP $upstream_addr always;
            add_header X-Response-Time $request_time always;
        }

        # =====================================
        # MONITORING ENDPOINTS (Plot + Dashboard)
        # =====================================
        location /plot {
            limit_req zone=monitoring burst=10 nodelay;
            
            proxy_pass http://monitoring_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
            
            # Add response headers
            add_header X-Service "monitoring" always;
            add_header X-Backend-IP $upstream_addr always;
        }

        location /dashboard {
            limit_req zone=monitoring burst=10 nodelay;
            
            proxy_pass http://monitoring_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
            
            # Add response headers
            add_header X-Service "monitoring" always;
            add_header X-Backend-IP $upstream_addr always;
        }

        # =====================================
        # HEALTH CHECK ENDPOINTS
        # =====================================
        location /health/training {
            proxy_pass http://training_backend/healthcheck;
            proxy_set_header Host $host;
            add_header X-Service "training-health" always;
        }

        location /health/inference {
            proxy_pass http://inference_backend/healthcheck;
            proxy_set_header Host $host;
            add_header X-Service "inference-health" always;
        }

        location /health/monitoring {
            proxy_pass http://monitoring_backend/healthcheck;
            proxy_set_header Host $host;
            add_header X-Service "monitoring-health" always;
        }

        # System health (aggregated)
        location /health {
            proxy_pass http://monitoring_backend/healthcheck;
            proxy_set_header Host $host;
            add_header X-Service "system-health" always;
        }

        # =====================================
        # API DOCUMENTATION
        # =====================================
        location /docs {
            proxy_pass http://training_backend/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # =====================================
        # API GATEWAY STATUS
        # =====================================
        location /api-gateway/status {
            access_log off;
            return 200 '{"status":"healthy","gateway":"nginx-simulator","services":3,"timestamp":$msec}';
            add_header Content-Type application/json;
            add_header X-Service "api-gateway" always;
        }

        # =====================================
        # DEFAULT / ROOT
        # =====================================
        location / {
            proxy_pass http://monitoring_backend/dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header X-Service "default" always;
        }

        # =====================================
        # ERROR PAGES
        # =====================================
        error_page 404 /api-gateway/404;
        error_page 500 502 503 504 /api-gateway/5xx;
        
        location /api-gateway/404 {
            internal;
            return 404 '{"error":"Endpoint not found","gateway":"nginx-simulator","available_services":["training","inference","monitoring"]}';
            add_header Content-Type application/json;
        }
        
        location /api-gateway/5xx {
            internal;
            return 500 '{"error":"Internal server error","gateway":"nginx-simulator"}';
            add_header Content-Type application/json;
        }
    }
}